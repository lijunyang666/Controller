<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qcacg.mapper.BookMapper">
    <!--2017年1月11日10:29:07 添加更新周期字段-->
    <resultMap id="BookResultMap" type="com.qcacg.entity.book.BookCustom">
        <id column="bookId" property="bookId"/>
        <result column="userId" property="userId"/>
        <result column="bookName" property="bookName"/>
        <result column="sort" property="sort"/>
        <result column="bookIntroduction" property="bookIntroduction"/>
        <result column="bookUpdate" property="bookUpdate"/>
        <result column="bookCoverImage" property="bookCoverImage"/>
        <result column="bookWordCount" property="bookWordCount"/>
        <result column="bookStatus" property="bookStatus"/>
        <result column="bookHit" property="bookHit"/>
        <result column="bookCollect" property="bookCollect"/>
        <result column="bookCopperCoins" property="bookCopperCoins"/>
        <result column="updateCycle" property="updateCycle"/>
        <association property="userEntity" javaType="com.qcacg.entity.UserEntity">
            <id column="userId" property="userId"/>
            <result column="userName" property="userName"/>
            <result column="information" property="information"/>
            <result column="userHead" property="userHead"/>
        </association>
    </resultMap>

    <!-- 查找所有未被推荐的书 -->
    <select id="findAllBook" resultMap="BookResultMap">
SELECT
	wor_book.BookId AS bookId,
	wor_book.UserId AS userId,
	wor_book.BookName AS bookName,
	wor_book.Sort AS sort,
	wor_book.BookIntroduction AS bookIntroduction,
	wor_book.BookUpdate AS bookUpdate,
	wor_book.BookCoverImage AS bookCoverImage,
	wor_book.BookWordCount AS bookWordCount,
	wor_book.BookStatus AS bookStatus,
	wor_book.BookHit AS bookHit,
	wor_book.BookCollect AS bookCollect,
	wor_book.BookCopperCoins AS bookCopperCoins,
	wor_book.BookSilverCoins AS bookSilverCoins,
	wor_book.UpdateCycle AS updateCycle,
	sys_user.UserId AS userId,
	sys_user.UserName AS userName,
	sys_user.Information AS information,
	sys_user.UserHead AS userHead
FROM
	wor_book
LEFT JOIN sys_user ON wor_book.UserId = sys_user.UserId
WHERE
    wor_book.IsRecommended = '0'
    AND
    wor_book.BookStatus = '0'
    </select>

    <!-- 查找被推荐的书，并且在主页显示-->
    <select id="findBookByIsRecom" resultMap="BookResultMap">
SELECT
	wor_book.BookId AS bookId,
	wor_book.UserId AS userId,
	wor_book.BookName AS bookName,
	wor_book.Sort AS sort,
	wor_book.BookIntroduction AS bookIntroduction,
	wor_book.BookUpdate AS bookUpdate,
	wor_book.BookCoverImage AS bookCoverImage,
	wor_book.BookWordCount AS bookWordCount,
	wor_book.BookStatus AS bookStatus,
	wor_book.BookHit AS bookHit,
	wor_book.BookCollect AS bookCollect,
	wor_book.BookCopperCoins AS bookCopperCoins,
	wor_book.BookSilverCoins AS bookSilverCoins,
	wor_book.UpdateCycle AS updateCycle,
	sys_user.UserId AS userId,
	sys_user.UserName AS userName,
	sys_user.Information AS information,
	sys_user.UserHead AS userHead
FROM
	wor_book
LEFT JOIN sys_user ON wor_book.UserId = sys_user.UserId
WHERE
    wor_book.BookStatus = '0'
    AND
    wor_book.IsRecommended = '1'
    AND
    wor_book.BookOnIndex != '0'
    limit 0, 6
    </select>

    <!-- 查找90天内创建的新书，并且未被推荐-->
    <select id="findBookByCreateTime" resultMap="BookResultMap">
    SELECT
        wor_book.BookId AS bookId,
        wor_book.UserId AS userId,
        wor_book.BookName AS bookName,
        wor_book.Sort AS sort,
        wor_book.BookIntroduction AS bookIntroduction,
        wor_book.BookUpdate AS bookUpdate,
        wor_book.BookCoverImage AS bookCoverImage,
        wor_book.BookWordCount AS bookWordCount,
        wor_book.BookStatus AS bookStatus,
        wor_book.BookHit AS bookHit,
        wor_book.BookCollect AS bookCollect,
        wor_book.BookCopperCoins AS bookCopperCoins,
        wor_book.BookSilverCoins AS bookSilverCoins,
        wor_book.UpdateCycle AS updateCycle,
        sys_user.UserId AS userId,
        sys_user.UserName AS userName,
        sys_user.Information AS information,
        sys_user.UserHead AS userHead
    FROM
        wor_book
    LEFT JOIN sys_user ON wor_book.UserId = sys_user.UserId
    WHERE
        wor_book.BookStatus = '0'
    AND
        wor_book.IsRecommended = '0'
    AND
        DATEDIFF(SYSDATE(),wor_book.BookCreateTime) BETWEEN 0 AND 90

<!-- DATEDIFF(SYSDATE(),wor_book.BookCreateTime) -->
    </select>


    <delete id="deleteUserByTelephone" parameterType="String">
        DELETE FROM sys_user WHERE sys_user.Telephone = #{sys_user.Telephone}
    </delete>

    <select id="findBookByBookName" resultType="com.qcacg.entity.BookEntity" parameterType="String">
        SELECT
          wor_book.BookId,
          wor_book.BookName
        FROM
          wor_book
        WHERE
          wor_book.BookName = #{wor_book.BookName}
    </select>

    <select id="findBookByUserId" resultType="com.qcacg.entity.BookEntity" parameterType="java.lang.Long">
    SELECT
        wor_book.BookId,
        wor_book.UserId,
        wor_book.BookName,
        wor_book.BookCoverImage,
        wor_book.UserId,
        wor_book.Sort,
        wor_book.BookIntroduction,
        wor_book.BookUpdate,
        wor_book.BookWordCount,
        wor_book.BookStatus,
        wor_book.BookHit,
        wor_book.BookCollect,
        wor_book.BookCopperCoins,
        wor_book.BookSilverCoins,
        wor_book.UpdateCycle,
        wor_book.BookReviewStatus
    FROM
        wor_book
    WHERE
        wor_book.UserId = #{wor_book.UserId}
    ORDER BY
        wor_book.BookUpdate DESC

    </select>

    <resultMap id="bookInfoResult" type="com.qcacg.entity.book.BookInfoEntity">
        <id column="bookId" property="bookId"/>
        <result column="userId" property="userId"/>
        <result column="bookName" property="bookName"/>
        <result column="sort" property="sort"/>
        <result column="bookIntroduction" property="bookIntroduction"/>
        <result column="bookUpdate" property="bookUpdate"/>
        <result column="bookCoverImage" property="bookCoverImage"/>
        <result column="bookWordCount" property="bookWordCount"/>
        <result column="bookStatus" property="bookStatus"/>
        <result column="bookHit" property="bookHit"/>
        <result column="bookCollect" property="bookCollect"/>
        <result column="bookCopperCoins" property="bookCopperCoins"/>
        <result column="userName" property="author"/>
        <result column="userHead" property="userHeadImg"/>
        <result column="updateCycle" property="updateCycle"/>
        <association property="volumeEntity" javaType="com.qcacg.entity.VolumeEntity">
            <id column="volumeId" property="volumeId"/>
            <result column="volumeName" property="volumeName"/>
        </association>
    </resultMap>

    <select id="findBookByBookUpDate" resultMap="bookInfoResult" >
      SELECT
wor_book.BookId AS bookId,
wor_book.UserId AS userId,
wor_book.BookName AS bookName,
wor_book.Sort AS sort,
wor_book.BookIntroduction AS bookIntroduction,
wor_book.BookUpdate AS bookUpdate,
wor_book.BookCoverImage AS bookCoverImage,
wor_book.BookWordCount AS bookWordCount,
wor_book.BookStatus AS bookStatus,
wor_book.BookHit AS bookHit,
wor_book.BookCollect AS bookCollect,
wor_book.BookCopperCoins AS bookCopperCoins,
wor_book.BookSilverCoins AS bookSilverCoins,
wor_book.UpdateCycle AS updateCycle,
sys_user.UserId AS userId,
sys_user.UserName AS userName,
sys_user.Information AS information,
sys_user.UserHead AS userHead,
volumeView.id AS volumeId,
volumeView.VolumeName AS volumeName
    FROM
    wor_book
    LEFT JOIN sys_user ON wor_book.UserId = sys_user.UserId
    , (SELECT MAX(VolumeId) as id, VolumeName, BookId
        from wor_volume WHERE VolumeStatus = 0 GROUP BY BookId) volumeView
    WHERE
    volumeView.BookId = wor_book.BookId
    AND
    wor_book.BookStatus = '0'
    ORDER BY
    wor_book.BookUpdate DESC
    </select>

    <select id="findBookByBookCopperCoins" resultType="com.qcacg.entity.BookEntity" >
        SELECT
        wor_book.BookId,
wor_book.UserId,
wor_book.BookName,
wor_book.Sort,
wor_book.BookIntroduction,
wor_book.BookUpdate,
wor_book.BookCoverImage,
wor_book.BookWordCount,
wor_book.BookStatus,
wor_book.BookHit,
wor_book.BookCollect,
wor_book.BookCopperCoins,
wor_book.BookSilverCoins,
wor_book.UpdateCycle
        FROM
        wor_book
        WHERE
        wor_book.BookStatus = '0'
        ORDER BY
        wor_book.BookCopperCoins DESC
    </select>

    <select id="WeekBookByBookCopperCoins" resultType="com.qcacg.entity.BookEntity" >
        SELECT
        wor_book.BookId,
        wor_book.UserId,
        wor_book.BookName,
        wor_book.Sort,
        wor_book.BookIntroduction,
        wor_book.BookUpdate,
        wor_book.BookCoverImage,
        wor_book.BookWordCount,
        wor_book.BookStatus,
        wor_book.BookHit,
        wor_book.BookCollect,
        wor_book.BookCopperCoins,
        wor_book.BookSilverCoins,
        wor_book.UpdateCycle
        FROM
        wor_book
        WHERE
        wor_book.BookStatus = '0'
        ORDER BY
        wor_book.EveryWeekCopperCoins DESC
    </select>

    <select id="MonthBookByBookCopperCoins" resultType="com.qcacg.entity.BookEntity" >
        SELECT
        wor_book.BookId,
        wor_book.UserId,
        wor_book.BookName,
        wor_book.Sort,
        wor_book.BookIntroduction,
        wor_book.BookUpdate,
        wor_book.BookCoverImage,
        wor_book.BookWordCount,
        wor_book.BookStatus,
        wor_book.BookHit,
        wor_book.BookCollect,
        wor_book.BookCopperCoins,
        wor_book.BookSilverCoins,
        wor_book.UpdateCycle
        FROM
        wor_book
        WHERE
        wor_book.BookStatus = '0'
        ORDER BY
        wor_book.EveryMonthCopperCoins DESC
    </select>

    <select id="findBookByBookHit" resultType="com.qcacg.entity.BookEntity" >
        SELECT
        wor_book.BookId,
        wor_book.UserId,
        wor_book.BookName,
        wor_book.Sort,
        wor_book.BookIntroduction,
        wor_book.BookUpdate,
        wor_book.BookCoverImage,
        wor_book.BookWordCount,
        wor_book.BookStatus,
        wor_book.BookHit,
        wor_book.BookCollect,
        wor_book.BookCopperCoins,
        wor_book.BookSilverCoins,
        wor_book.UpdateCycle
        FROM
        wor_book
        WHERE
        wor_book.BookStatus = '0'
        ORDER BY
        wor_book.BookHit DESC
    </select>


    <select id="WeekBookByBookHit" resultType="com.qcacg.entity.BookEntity" >
    SELECT
    wor_book.BookId,
    wor_book.UserId,
    wor_book.BookName,
    wor_book.Sort,
    wor_book.BookIntroduction,
    wor_book.BookUpdate,
    wor_book.BookCoverImage,
    wor_book.BookWordCount,
    wor_book.BookStatus,
    wor_book.BookHit,
    wor_book.BookCollect,
    wor_book.BookCopperCoins,
    wor_book.BookSilverCoins,
    wor_book.UpdateCycle
    FROM
    wor_book
    WHERE
    wor_book.BookStatus = '0'
    ORDER BY
    wor_book.EveryWeekHit DESC
    </select>

    <select id="MonthBookByBookHit" resultType="com.qcacg.entity.BookEntity" >
        SELECT
        wor_book.BookId,
        wor_book.UserId,
        wor_book.BookName,
        wor_book.Sort,
        wor_book.BookIntroduction,
        wor_book.BookUpdate,
        wor_book.BookCoverImage,
        wor_book.BookWordCount,
        wor_book.BookStatus,
        wor_book.BookHit,
        wor_book.BookCollect,
        wor_book.BookCopperCoins,
        wor_book.BookSilverCoins,
        wor_book.UpdateCycle AS updateCycle
        FROM
        wor_book
        WHERE
        wor_book.BookStatus = '0'
        ORDER BY
        wor_book.EveryMonthHit DESC
    </select>

    <select id="findBookByBookWordCount" resultType="com.qcacg.entity.BookEntity" >
        SELECT
        wor_book.BookId,
        wor_book.UserId,
        wor_book.BookName,
        wor_book.Sort,
        wor_book.BookIntroduction,
        wor_book.BookUpdate,
        wor_book.BookCoverImage,
        wor_book.BookWordCount,
        wor_book.BookStatus,
        wor_book.BookHit,
        wor_book.BookCollect,
        wor_book.BookCopperCoins,
        wor_book.BookSilverCoins,
        wor_book.UpdateCycle
        FROM
        wor_book
        WHERE
        wor_book.BookStatus = '0'
        ORDER BY
        wor_book.BookWordCount DESC
    </select>

    <select id="WeekBookByBookWordCount" resultType="com.qcacg.entity.BookEntity" >
    SELECT
    wor_book.BookId,
    wor_book.UserId,
    wor_book.BookName,
    wor_book.Sort,
    wor_book.BookIntroduction,
    wor_book.BookUpdate,
    wor_book.BookCoverImage,
    wor_book.BookWordCount,
    wor_book.BookStatus,
    wor_book.BookHit,
    wor_book.BookCollect,
    wor_book.BookCopperCoins,
    wor_book.BookSilverCoins,
    wor_book.UpdateCycle
    FROM
    wor_book
    WHERE
    wor_book.BookStatus = '0'
    ORDER BY
    wor_book.EveryWeekWordCount DESC
    </select>

    <select id="MonthBookByBookWordCount" resultType="com.qcacg.entity.BookEntity" >
        SELECT
        wor_book.BookId,
        wor_book.UserId,
        wor_book.BookName,
        wor_book.Sort,
        wor_book.BookIntroduction,
        wor_book.BookUpdate,
        wor_book.BookCoverImage,
        wor_book.BookWordCount,
        wor_book.BookStatus,
        wor_book.BookHit,
        wor_book.BookCollect,
        wor_book.BookCopperCoins,
        wor_book.BookSilverCoins,
        wor_book.UpdateCycle
        FROM
        wor_book
        WHERE
        wor_book.BookStatus = '0'
        ORDER BY
        wor_book.EveryMonthWordCount DESC
    </select>

    <select id="queryBookForCheck" resultType="com.qcacg.entity.BookEntity">
        SELECT
wor_book.BookId,
wor_book.UserId,
wor_book.BookName,
wor_book.Sort,
wor_book.BookIntroduction,
wor_book.BookUpdate,
wor_book.BookCoverImage,
wor_book.BookWordCount,
wor_book.BookStatus,
wor_book.BookHit,
wor_book.BookCollect,
wor_book.BookCopperCoins,
wor_book.BookSilverCoins,
wor_book.UpdateCycle
FROM
wor_book
WHERE
wor_book.BookStatus = '2'
ORDER BY
wor_book.BookUpdate ASC

    </select>

    <!--                 开始recom                                      -->
    <select id="listBookRecomByReviewStatus" parameterType="map" resultType="map">
        SELECT
        UserId AS userId,
        BookId AS bookId,
        BookName AS bookName,
        BookIsSign AS bookIsSign,
        IsRecommended AS isRecommended,
        BookOnIndex AS bookOnIndex
        FROM wor_book
        WHERE
        BookReviewStatus = '已审核'
        ORDER BY
        BookIsSign DESC
        <if test="start != null">
            limit
            #{start}, #{rows}
        </if>
    </select>

    <update id="updateBookRecomByBookId" parameterType="map">
        update wor_book
        <set>
            <trim suffixOverrides=",">
                <if test="isRecommended != null">
                    IsRecommended = #{isRecommended},
                </if>
                <if test="bookOnIndex != null">
                    BookOnIndex = #{bookOnIndex}
                </if>
            </trim>
        </set>
        where BookId=#{bookId}
    </update>
    <!--                 结束recom                                      -->

    <!--                 开始Sign                                      -->
    <update id="cleanAllSignLevelStatus">
        UPDATE inf_sign
        SET IsEntry = 0
        WHERE IsEntry=1
    </update>

    <update id="updateLastSignLevelBySignId" parameterType="int">
        UPDATE inf_sign
        SET SignLevel = SignLevel+1
        WHERE SignId=#{signId}
    </update>

    <update id="updateIsEntryBySignId" parameterType="map">
        UPDATE inf_sign
        SET IsEntry=#{isEntry}
        WHERE SignId=#{signId}
    </update>

    <select id="findSignLevelAllByLevel" parameterType="int" resultType="map">
        SELECT
        SignLevel as signLevel,
        DrawWelfare as drawWelfare,
        FullWelfare as fullWelfare,
        SignLevelDescription as signLevelDescription
        FROM inf_sign_level
        WHERE
        SignLevel=#{signLevel}
    </select>

    <select id="findFullWelfareByLevel" parameterType="int" resultType="string">
        SELECT
        FullWelfare as fullWelfare
        FROM inf_sign_level
        WHERE
        SignLevel=#{signLevel}
    </select>

    <select id="findDrawWelfareByLevel" parameterType="int" resultType="string">
        SELECT
        DrawWelfare as drawWelfare
        FROM inf_sign_level
        WHERE
        SignLevel=#{signLevel}
    </select>

    <select id="findAllSimpleBookSign" resultType="map">
        SELECT
        SignId as signId,
        BookId as bookId,
        UpdateType as updateType,
        SignLevel as signLevel
        FROM inf_sign
        WHERE
        Status=2
    </select>

    <update id="updateLastBookSignByParam" parameterType="map">
        update inf_sign
        set Status=#{status},Reply=#{reply}
        where BookId=#{bookId}
        order by SignId desc
        limit 1
    </update>

    <update id="updateBookSignCycleByParam" parameterType="map">
        update wor_book
        set BookIsSign=#{bookIsSign},UpdateCycle=#{updateCycle}
        where BookId=#{bookId}
    </update>

    <select id="findAllBookSign" parameterType="map" resultType="com.qcacg.entity.SignEntity">
        SELECT
        SignId as signId,
        BookId as bookId,
        Uname as uname,
        SignName as signName,
        Many as many,
        LastTime as lastTime,
        UpdateType as updateType,
        Status as status,
        SignLevel as signLevel,
        QQ as qq,
        Email as email,
        Phone as phone,
        Address as address,
        Message as message,
        Reply as reply
        FROM inf_sign
        WHERE
        Status in(0,1,2)
        ORDER BY
        SignId
        <if test="start != null">
            limit
            #{start}, #{rows}
        </if>
    </select>

    <select id="findLastBookSignByBookId" parameterType="long" resultType="com.qcacg.entity.SignEntity">
        SELECT
        SignId as signId,
        BookId as bookId,
        Uname as uname,
        SignName as signName,
        Many as many,
        LastTime as lastTime,
        UpdateType as updateType,
        Status as status,
        SignLevel as signLevel,
        QQ as qq,
        Email as email,
        Phone as phone,
        Address as address,
        Message as message
        FROM inf_sign
        WHERE BookId=#{bookId}
        order by SignId desc
        limit 1
    </select>

    <insert id="saveBookSign" parameterType="com.qcacg.entity.SignEntity">
        insert into inf_sign(
        SignId,
        BookId,
        Uname,
        SignName,
        Many,
        LastTime,
        UpdateType,
        Status,
        SignLevel,
        QQ,
        Email,
        Phone,
        Address,
        Message
        ) values (
        null,
        #{bookId},
        #{uname},
        #{signName},
        #{many},
        #{lastTime},
        #{updateType},
        #{status},
        #{signLevel},
        #{qq},
        #{email},
        #{phone},
        #{address},
        #{message}
        )
    </insert>

    <select id="findReviewStatusByBookId" parameterType="long" resultType="string">
        SELECT Status as status
        FROM inf_review
        WHERE BookId=#{bookId}
    </select>

    <select id="findBookNameByBookId" parameterType="long" resultType="string">
        SELECT ReviewName
        FROM inf_review
        WHERE BookId=#{bookId}
    </select>
    <!--                 结束Sign                                      -->

    <!--                 开始review                                      -->
    <select id="findUserIdByBookId" parameterType="long" resultType="long">
        select UserId as userId
        from wor_book
        where BookId=#{bookId}
    </select>

    <select id="findReplyByReviewMSGId" parameterType="int" resultType="string">
        select Reply
        from inf_reviewMSG
        where ReviewMSGId=#{reviewMSGId}
    </select>

    <select id="findLastReviewMSGIdByReviewId" parameterType="int" resultType="string">
        select ReviewMSGId
        from inf_reviewMSG
        where ReviewId=#{reviewId}
        order by ReviewMSGId DESC
        limit 1
    </select>

    <update id="updateReviewMSGReplyByReviewMSGId" parameterType="map">
        update inf_reviewMSG
        set Reply=#{reply}
        where ReviewMSGId=#{reviewMSGId}
    </update>

    <update id="updateReviewStatusByParam" parameterType="map">
        update inf_review
        set Status=#{status}
        where BookId=#{bookId}
    </update>

    <update id="updateReviewByParam" parameterType="map">
        update inf_review
        set Status=#{status},Many=#{many},LastTime=#{lastTime}
        where BookId=#{bookId}
    </update>

    <resultMap id="ReviewByBook" type="com.qcacg.entity.ReviewEntity">
        <id column="reviewId" property="reviewId"/>
        <result column="bookId" property="bookId"/>
        <result column="reviewName" property="reviewName"/>
        <result column="many" property="many"/>
        <result column="lastTime" property="lastTime"/>
        <result column="status" property="status"/>
        <!-- 映射集合 -->
        <collection property="reviewMSG" select="findReviewMSGsByReviewId" column="reviewId"/>
    </resultMap>
    <select id="findReviewByBookId" parameterType="long" resultMap="ReviewByBook">
        select
        ReviewId as reviewId,
        BookId as bookId,
        ReviewName as reviewName,
        Many as many,
        LastTime as lastTime,
        Status as status
        from
        inf_review
        where
        inf_review.BookId=#{bookId}
    </select>

    <insert id="saveReview" parameterType="map" useGeneratedKeys="true" keyProperty="reviewId">
        <selectKey keyProperty="reviewId" resultType="int" order="AFTER">
            SELECT LAST_INSERT_ID() as ID
        </selectKey>
        insert into inf_review (ReviewId,BookId,ReviewName,Many,LastTime,Status)
        values(null,#{bookId},#{reviewName},#{many},#{lastTime},#{status})
    </insert>

    <insert id="saveReviewMSG" parameterType="com.qcacg.entity.ReviewMSGEntity">
        insert into inf_reviewMSG (ReviewMSGId,ReviewId,Sort,Message,Reply)
        values (null,#{reviewId},#{sort},#{message},#{reply})
    </insert>

    <resultMap id="ReviewMap" type="com.qcacg.entity.ReviewEntity">
        <id column="reviewId" property="reviewId"/>
        <result column="bookId" property="bookId"/>
        <result column="reviewName" property="reviewName"/>
        <result column="many" property="many"/>
        <result column="lastTime" property="lastTime"/>
        <result column="status" property="status"/>
        <!-- 映射集合 -->
        <collection property="reviewMSG" select="findReviewMSGsByReviewId" column="reviewId"/>
    </resultMap>
    <select id="findReviewsByParam" parameterType="map" resultMap="ReviewMap">
        select
        ReviewId as reviewId,
        BookId as bookId,
        ReviewName as reviewName,
        Many as many,
        LastTime as lastTime,
        Status as status
        from
        inf_review
        ORDER BY FIELD(inf_review.Status, 1, 4, 2, 3)
        <if test="start != null">
            limit
            #{start}, #{rows}
        </if>
    </select>

    <select id="findReviewMSGsByReviewId" resultType="com.qcacg.entity.ReviewMSGEntity">
        select
        inf_reviewMSG.ReviewMSGId as reviewMSGId,
        inf_reviewMSG.ReviewId as reviewId,
        inf_reviewMSG.Sort as sort,
        inf_reviewMSG.Message as message,
        inf_reviewMSG.Reply as reply
        from
        inf_reviewMSG
        where
        inf_reviewMSG.ReviewId=#{reviewId}
    </select>

    <update id="updateBookReviewStatusSHZByBooId" parameterType="long">
        UPDATE wor_book
        SET BookReviewStatus= '审核中'
        WHERE BookId=#{bookId}
    </update>

    <update id="updateBookReviewStatusYSHByBooId" parameterType="long">
        UPDATE wor_book
        SET BookReviewStatus= '已审核'
        WHERE BookId=#{bookId}
    </update>

    <update id="updateBookReviewStatusSHSBByBooId" parameterType="long">
        UPDATE wor_book
        SET BookReviewStatus= '审核失败'
        WHERE BookId=#{bookId}
    </update>

    <insert id="insertMessage" useGeneratedKeys="true" parameterType="java.util.Map">
        INSERT INTO inf_user_message(userId, messageTitle, message, messageType)
        VALUES (#{userId}, #{messageTitle}, #{message}, #{messageType})
    </insert>

    <!--                 结束review                                      -->


    <select id="SearchBookByKeyWord" resultType="com.qcacg.entity.BookEntity" parameterType="java.lang.String">
    SELECT
    wor_book.BookId,
    wor_book.UserId,
    wor_book.BookName,
    wor_book.Sort,
    wor_book.BookIntroduction,
    wor_book.BookUpdate,
    wor_book.BookCoverImage,
    wor_book.BookWordCount,
    wor_book.BookStatus,
    wor_book.BookHit,
    wor_book.BookCollect,
    wor_book.BookCopperCoins,
    wor_book.BookSilverCoins,
    wor_book.WeekWordCount,
    wor_book.WeekHit,
    wor_book.WeekCopperCoins,
    wor_book.MonthWordCount,
    wor_book.MonthHit,
    wor_book.MonthCopperCoins,
    wor_book.EveryWeekWordCount,
    wor_book.EveryWeekHit,
    wor_book.EveryWeekCopperCoins,
    wor_book.EveryMonthWordCount,
    wor_book.EveryMonthHit,
    wor_book.EveryMonthCopperCoins,
    wor_book.UpdateCycle
    FROM
    wor_book,
    sys_user
    WHERE
    wor_book.BookName LIKE CONCAT('%',#{KeyWord},'%')
    OR sys_user.UserName LIKE CONCAT('%',#{KeyWord},'%')
    AND wor_book.UserId = sys_user.UserId
    AND wor_book.BookStatus = '0'
    GROUP BY
    wor_book.BookId
    </select>

    <insert id="insertBook" parameterType="com.qcacg.entity.BookEntity" useGeneratedKeys="true" keyProperty="bookId">
        <selectKey keyProperty="bookId" resultType="java.lang.Long" order="AFTER">
            SELECT LAST_INSERT_ID() as bookId
        </selectKey>
        INSERT INTO wor_book (updateCycle,bookId,userId,bookName,sort,bookIntroduction,bookCoverImage, wor_book.BookCreateTime)
        VALUES( #{updateCycle,jdbcType=INTEGER},#{bookId,jdbcType=BIGINT},#{userId,jdbcType=BIGINT},#{bookName,jdbcType=VARCHAR},#{sort,jdbcType=VARCHAR},#{bookIntroduction,jdbcType=VARCHAR},#{bookCoverImage,jdbcType=VARCHAR}, #{bookCreateTime} )
    </insert>

    <update id="updateBook" parameterType="com.qcacg.entity.BookEntity">
        UPDATE wor_book SET bookName=#{bookName},sort=#{sort},bookIntroduction=#{bookIntroduction},bookCoverImage=#{bookCoverImage},nextUpdateCycle=#{nextUpdateCycle}, changeUpdateCycleTime=#{changeUpdateCycleTime} WHERE bookId=#{bookId}
    </update>

    <update id="userUpdateBookStatus" parameterType="java.lang.Long">
        UPDATE wor_book SET bookStatus= '2' WHERE bookId=#{bookId}
    </update>

    <update id="adminUpdateBookStatus" parameterType="java.lang.Long">
        UPDATE wor_book SET bookStatus= '1' WHERE bookId=#{bookId}
    </update>

    <update id="batchUpdateBookStatus" parameterType="java.util.List">
        UPDATE wor_book SET wor_book.BookStatus = '2'
        WHERE wor_book.BookId IN
        <foreach collection="list" item="item" index="index" open="(" separator="," close=")" >
            #{item}
        </foreach>
    </update>

    <update id="batchUpdateBookStatus2" parameterType="java.util.List">
        <foreach collection="list" item="item" index="index" open="" close="" separator=";">
            UPDATE wor_book SET wor_book.BookStatus = '2'
            WHERE wor_book.BookId = #{item}
        </foreach>
    </update>

    <delete id="deleteBookByBookId" parameterType="java.lang.Long">
        DELETE wor_book, wor_bookcollect,
        wor_bookcopper, wor_bookhit,
        wor_booksilver, wor_book_booktype,
        wor_volume
        FROM
        wor_book, wor_bookcollect,
        wor_bookcopper, wor_bookhit,
        wor_booksilver, wor_book_booktype,
        wor_volume
        WHERE
          wor_book.BookId = wor_bookcollect.BookId = wor_bookcopper.BookId = wor_bookhit.BookId
          = wor_booksilver.BookId = wor_book_booktype.BookId = wor_volume.BookId
        AND
          wor_book.BookId = #{bookId}
    </delete>
    <delete id="batchDeleteBookByBookId" parameterType="java.util.List">
        <foreach collection="list" item="item" index="index" open="" close="" separator=";">
            DELETE wor_book, wor_bookcollect,
            wor_bookcopper, wor_bookhit,
            wor_booksilver, wor_book_booktype,
            wor_volume
            FROM
            wor_book, wor_bookcollect,
            wor_bookcopper, wor_bookhit,
            wor_booksilver, wor_book_booktype,
            wor_volume
            WHERE
            wor_book.BookId = wor_bookcollect.BookId = wor_bookcopper.BookId = wor_bookhit.BookId
            = wor_booksilver.BookId = wor_book_booktype.BookId = wor_volume.BookId
            AND
            wor_book.BookId = #{item}
        </foreach>
    </delete>

    <update id="updateNextUpdateCycle" parameterType="com.qcacg.entity.BookEntity">
        UPDATE wor_book AS b
        SET b.ChangeUpdateCycleTime = #{book.changeUpdateCycleTime},b.NextUpdateCycle = #{book.nextUpdateCycle}
        WHERE b.BookId = #{book.bookId}
    </update>
    <update id="updateUpdateCycle" parameterType="com.qcacg.entity.BookEntity">
        UPDATE wor_book AS b
        SET b.UpdateCycle = #{book.nextUpdateCycle},b.NextUpdateCycle = 0 ,b.ChangeUpdateCycleTime = NULL
        WHERE b.BookId = #{book.bookId}
    </update>
    <select id="findBookByBookIdForChangeUpdateCycle" resultType="com.qcacg.entity.BookEntity" parameterType="java.lang.Long">
        SELECT
            b.BookId AS bookId,
            b.UpdateCycle AS updateCycle,
            b.NextUpdateCycle AS nextUpdateCycle,
            b.ChangeUpdateCycleTime AS changeUpdateCycleTime
        FROM
            wor_book AS b
        WHERE
            b.ChangeUpdateCycleTime IS NULL
        AND b.BookId = #{bookId}
    </select>
    <select id="findAllBooksForChangeUpdateCycle" resultType="com.qcacg.entity.BookEntity">
        SELECT
            b.BookId AS bookId,
            b.UpdateCycle AS updateCycle,
            b.NextUpdateCycle AS nextUpdateCycle,
            b.ChangeUpdateCycleTime AS changeUpdateCycleTime
        FROM
            wor_book AS b
        WHERE
            b.ChangeUpdateCycleTime IS NOT NULL
        AND
            b.NextUpdateCycle != 0
        AND
            b.NextUpdateCycle IS NOT NULL
    </select>
    <select id="findBookByBookId" parameterType="java.lang.Long" resultType="com.qcacg.entity.BookEntity">
        SELECT
        wor_book.BookId AS bookId,
        wor_book.UserId AS userId,
        wor_book.BookName AS bookName,
        wor_book.Sort AS sort,
        wor_book.BookIntroduction AS bookIntroduction,
        wor_book.BookUpdate AS bookUpdate,
        wor_book.BookCoverImage AS bookCoverImage,
        wor_book.BookWordCount AS bookWordCount,
        wor_book.BookStatus AS bookStatus,
        wor_book.BookHit AS bookHit,
        wor_book.BookCollect AS bookCollect,
        wor_book.BookCopperCoins AS bookCopperCoins,
        wor_book.BookSilverCoins AS bookSilverCoins,
        wor_book.UpdateCycle AS updateCycle,
        wor_book.NextUpdateCycle AS nextUpdateCycle,
        wor_book.ChangeUpdateCycleTime AS changeUpdateCycleTime,
        wor_book.BookIsSign AS bookIsSign
        FROM
        wor_book
        WHERE
        wor_book.bookId = #{bookId}
    </select>

    <update id="updateBookCardAmount">
        UPDATE wor_book
        SET
        wor_book.BookCopperCoins = wor_book.BookCopperCoins+#{cardAmount},
        wor_book.EveryWeekCopperCoins = wor_book.EveryWeekCopperCoins+#{cardAmount},
        wor_book.EveryMonthCopperCoins = wor_book.EveryMonthCopperCoins+#{cardAmount}
        WHERE
        wor_book.BookId = #{bookId}
    </update>

    <update id="updateBookWeekCopperCoins">
        UPDATE wor_book
        SET
        wor_book.WeekCopperCoins = wor_book.EveryWeekCopperCoins,
        wor_book.EveryWeekCopperCoins = 0
    </update>

    <update id="updateBookMonthCopperCoins">
        UPDATE wor_book
        SET
        wor_book.MonthCopperCoins = wor_book.EveryMonthCopperCoins,
        wor_book.EveryMonthCopperCoins = 0
    </update>
</mapper>