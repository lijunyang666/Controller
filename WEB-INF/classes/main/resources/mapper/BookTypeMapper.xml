<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qcacg.mapper.BookTypeMapper">


    <select id="queryBookType" resultType="com.qcacg.entity.BookTypeEntity" >
        SELECT
wor_booktype.BookTypeId,
wor_booktype.BookTypeName,
wor_booktype.BookTypeDescription
FROM
wor_booktype

    </select>


<resultMap id="bookInfoResult" type="com.qcacg.entity.book.BookInfoEntity">
    <id column="BookId" property="bookId"/>
    <result column="BookName" property="bookName"/>
    <result column="BookIntroduction" property="bookIntroduction"/>
    <result column="BookUpdate" property="bookUpdate"/>
    <result column="BookCoverImage" property="bookCoverImage"/>
    <result column="BookWordCount" property="bookWordCount"/>
    <result column="BookIsSign" property="bookIsSign"/>
    <result column="BookHit" property="bookHit"/>
    <result column="BookCollect" property="bookCollect"/>
    <result column="BookCopperCoins" property="bookCopperCoins"/>
    <result column="UserName" property="author"/>
    <result column="UserHead" property="userHeadImg"/>
    <association property="volumeEntity" javaType="com.qcacg.entity.VolumeEntity">
        <id column="VolumeId" property="volumeId"/>
        <result column="VolumeName" property="volumeName"/>
    </association>
</resultMap>


    <select id="findBookByBookTypeId" resultType="com.qcacg.entity.BookEntity" parameterType="java.lang.Long">
        SELECT
          wor_book.BookId,
          wor_book.UserId,
          wor_book.BookName,
          wor_book.BookCoverImage,
          wor_book.Sort,
          wor_book.BookIntroduction,
          wor_book.BookUpdate,
          wor_book.BookWordCount,
          wor_book.BookStatus,
          wor_book.BookHit,
          wor_book.BookCollect,
          wor_book.BookCopperCoins,
          wor_book.BookSilverCoins
        FROM
          wor_book
        INNER JOIN (SELECT wor_book_booktype.BookId FROM wor_book_booktype
                      WHERE wor_book_booktype.BookTypeId = #{bookTypeId}) booktype
        ON wor_book.BookId = booktype.BookId
        WHERE
          wor_book.BookStatus = '0'
    </select>


    <!-- 错误sql -->
    <!--<select id="search" resultMap="bookInfoResult" parameterType="com.qcacg.entity.book.PageVo">
        SELECT
        wor_book.BookId,
        wor_book.BookName,
        wor_book.BookCoverImage,
        wor_book.Sort,
        wor_book.BookIntroduction,
        wor_book.BookUpdate,
        wor_book.BookWordCount,
        wor_book.BookStatus,
        wor_book.BookHit,
        wor_book.BookCollect,
        wor_book.BookCopperCoins,
        newest.id as VolumeId,
        newest.VolumeName,
        sys_user.UserName,
        sys_user.UserHead
        FROM
        wor_book
        INNER JOIN
          sys_user
        ON wor_book.UserId = sys_user.UserId
        INNER JOIN
          (SELECT wor_book_booktype.BookId FROM wor_book_booktype
              <include refid="query_booktype"/> ) booktype
        ON wor_book.BookId = booktype.BookId
        LEFT JOIN (SELECT MAX(VolumeId) as id, VolumeName, BookId
        from wor_volume WHERE VolumeStatus = 0 GROUP BY BookId) newest
        ON booktype.BookId = newest.BookId
        WHERE
        wor_book.BookStatus = '0'
        <include refid="screen"/>
        ORDER BY	${orderByStr} DESC
        LIMIT #{page.startRow},#{page.pageSize}
    </select> -->
    
    <select id="search" resultMap="bookInfoResult" parameterType="com.qcacg.entity.book.PageVo">
        SELECT
        wor_book.BookId,
        wor_book.BookName,
        wor_book.BookIntroduction,
        wor_book.BookCoverImage,
        wor_book.BookUpdate,
        wor_book.BookWordCount,
        wor_book.BookHit,
        wor_book.BookCollect,
        wor_book.BookCopperCoins,
        wor_book.BookIsSign,
        wor_volume.VolumeId,
        wor_volume.VolumeName,
        sys_user.UserName,
        sys_user.UserHead
        FROM
        wor_book
        INNER JOIN wor_volume ON wor_volume.BookId = wor_book.BookId
        INNER JOIN (
							SELECT
								wor_volume.BookId,
								MAX(wor_volume.VolumeId) AS VolumeId
							FROM
								wor_volume
							INNER JOIN
								(SELECT wor_book_booktype.BookId
									FROM wor_book_booktype
                                <include refid="query_booktype"/>) AS booktype
							ON wor_volume.BookId = booktype.BookId
                            WHERE wor_volume.VolumeStatus = 0
							GROUP BY wor_volume.BookId
						) AS last_volume
        ON wor_volume.VolumeId = last_volume.VolumeId
        INNER JOIN sys_user ON wor_book.UserId = sys_user.UserId
        WHERE
	    wor_book.BookStatus = '0'
        <include refid="screen"/>
        ORDER BY	${orderByStr} DESC
        LIMIT #{page.startRow},#{page.pageSize}
    </select>
    
    <sql id="query_user_where">
      <if test="isSign != null">
        WHERE
        UserStatus = #{isSign, jdbcType=CHAR}
      </if>
    </sql>
    <sql id="query_booktype">
        <if test="bookTypeId != null">
            WHERE wor_book_booktype.BookTypeId = #{bookTypeId}
        </if>
        <if test="bookTypeId == null">
            GROUP BY BookId
        </if>
    </sql>
    <sql id="screen">
        <if test="isSign != null">
            AND
            wor_book.BookIsSign = #{isSign}
        </if>
        <if test="keyword != null">
            AND
            wor_book.BookName LIKE CONCAT('%',#{keyword},'%')
            OR sys_user.UserName LIKE CONCAT('%',#{keyword},'%')
        </if>
        <if test="wordMin != null and wordMax != null">
            AND
            wor_book.BookWordCount BETWEEN #{wordMin} AND #{wordMax}
        </if>
        <if test="wordMin != null and wordMax == null" >
            AND
            wor_book.BookWordCount >= #{wordMin}
        </if>
    </sql>


    <select id="sum" resultType="java.lang.Integer" parameterType="com.qcacg.entity.book.PageVo">
        SELECT
        count(wor_book.BookId)
        FROM
        wor_book
        INNER JOIN wor_volume ON wor_volume.BookId = wor_book.BookId
        INNER JOIN (
                        SELECT
                        wor_volume.BookId,
                        MAX(wor_volume.VolumeId) AS VolumeId
                        FROM
                        wor_volume
                        INNER JOIN
                        (SELECT wor_book_booktype.BookId
                        FROM wor_book_booktype
                        <include refid="query_booktype"/>) AS booktype
                        ON wor_volume.BookId = booktype.BookId
                        WHERE wor_volume.VolumeStatus = 0
                        GROUP BY wor_volume.BookId
                    ) AS last_volume
        ON wor_volume.VolumeId = last_volume.VolumeId
        INNER JOIN sys_user ON wor_book.UserId = sys_user.UserId
        WHERE
        wor_book.BookStatus = '0'
        <include refid="screen"/>
    </select>
</mapper>